library("dplyr")
library("MASS")
library("lme4")
library("glmmTMB")
library("gamm4")
library('caret')
library('blmeco')
library(pROC)
library(VineCopula)
library("PerformanceAnalytics")
library(glmmTMB)
library(ggplot2)
library(cvms)
library(sgof)


aggregate_pm_census_cdc_test_beds_age_diabete_obesity<-readRDS('PM25data.Rds')
# Main- mixed effects negative binomial, deaths from percent black to identify risk to specific race
#MRR=1.495(1.38,1.611), p val = sig. =3.87e-26
mode.nb.random.off.main = glmer.nb(Deaths ~ scale(pct_blk) + factor(q_popdensity)
                                   + scale(log(medhouseholdincome))+scale(education)
                                   + scale(date_since_social) + scale(date_since)
                                   + (1|state)+ scale(beds/population)+scale(pct_obesity)
                                   +scale(pct_age65)+scale(pct_diabetes)
                                   + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(mode.nb.random.off.main)
MRR_pct_blk<-exp(summary(mode.nb.random.off.main)[10]$coefficients[2:14,1])
MRR_pct_blk
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
summary(mode.nb.random.off.main)[10]$coefficients[2,4]

#zero-inflated for race- nearly the same result as the main analysis
glmmTMB.off.main = glmmTMB(Deaths ~ scale(pct_blk) + factor(q_popdensity)
                           + scale(log(medhouseholdincome))+scale(education)
                           + scale(date_since_social) + scale(date_since)
                           + (1|state) + scale(beds/population) 
                           + offset(log(population)), data = aggregate_pm_census_cdc_test_beds,
                           family = nbinom2, ziformula  = ~ 1)
summary(glmmTMB.off.main)
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1])
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1] - 1.96*summary(glmmTMB.off.main)[6]$coefficients$cond[2,2])
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1] + 1.96*summary(glmmTMB.off.main)[6]$coefficients$cond[2,2])
summary(glmmTMB.off.main)[6]$coefficients$cond[2,4]

# exclude NY Metro- slighlty lower MMR for pct_blk, possibly due to high pct_blk incidence in high mortality area like nyc
mode.nb.random.off.nyc = glmer.nb(Deaths ~ scale(pct_blk) + factor(q_popdensity)
                                  + scale(log(medhouseholdincome))+scale(education)
                                  + scale(date_since_social) + scale(date_since)
                                  + (1|state) + scale(beds/population)                           + (1|state)
                                  + offset(log(population)),data = subset(aggregate_pm_census_cdc_test_beds,!(fips %in% c("09001","42089","36111","09009","36059","36103","34013",
                                                                                                                          "36079","36081",  "36085",  "36087",  "36119",  "36027",                                                                                                                           "36071",  "09005",  "34021"))))
summary(mode.nb.random.off.nyc)
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
summary(mode.nb.random.off.nyc)[10]$coefficients[2,4]




############MODELS FOR OTHER RACES########################################################

#ASIAN--> 95% CI (1.07,1.233), MRR= 1.15, p val sig.
asian.mode.nb.random.off.main = glmer.nb(Deaths ~ scale(pct_asian) + factor(q_popdensity)
                                         + scale(log(medhouseholdincome))+scale(education)
                                         + scale(date_since_social) + scale(date_since)
                                         + (1|state)+ scale(beds/population) 
                                         +scale(pct_obesity)
                                         +scale(pct_age65)+scale(pct_diabetes)
                                         + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(asian.mode.nb.random.off.main)
MRR_pct_asian<-exp(summary(asian.mode.nb.random.off.main)[10]$coefficients[2:14,1])
MRR_pct_asian
exp(summary(asian.mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(asian.mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(asian.mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(asian.mode.nb.random.off.main)[10]$coefficients[2,2])
summary(asian.mode.nb.random.off.main)[10]$coefficients[2,4]

# exclude NY metro (ASIAN)-MRR:1706.2, 95 CI= (53.47,5443),p-value=sig.
mode.nb.random.off.nyc = glmer.nb(Deaths ~ scale(pct_asian) + factor(q_popdensity)
                                  + scale(log(medhouseholdincome))+scale(education)
                                  + scale(date_since_social) + scale(date_since)
                                  + (1|state) + scale(beds/population)                           + (1|state)
                                  + offset(log(population)),data = subset(aggregate_pm_census_cdc_test_beds,!(fips %in% c("09001","42089","36111","09009","36059","36103","34013",
                                                                                                                          "36079","36081",  "36085",  "36087",  "36119",  "36027",                                                                                                                           "36071",  "09005",  "34021"))))
summary(mode.nb.random.off.nyc)
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
summary(mode.nb.random.off.nyc)[10]$coefficients[2,4]

#WHITE-MRR=.67, 95% CI=(.624,.721), p val is sig=3.07e-27, pct_age65 is significant (1.12 MRR)
white.mode.nb.random.off.main = glmer.nb(Deaths ~ scale(pct_white) + factor(q_popdensity)
                                         + scale(log(medhouseholdincome))+scale(education)
                                         + scale(date_since_social) + scale(date_since)
                                         + (1|state)+ scale(beds/population) 
                                         +scale(pct_obesity)
                                         +scale(pct_age65)+scale(pct_diabetes)
                                         + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(white.mode.nb.random.off.main)
MRR_pct_white<-exp(summary(white.mode.nb.random.off.main)[10]$coefficients[2:14,1])
MRR_pct_white
exp(summary(white.mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(white.mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(white.mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(white.mode.nb.random.off.main)[10]$coefficients[2,2])
summary(white.mode.nb.random.off.main)[10]$coefficients[2,4]

#NATIVE- MMR=1.07, 95% CI=(.994,1.15),p-value=.07, not sig.
native.mode.nb.random.off.main = glmer.nb(Deaths ~ scale(pct_native) + factor(q_popdensity)
                                          + scale(log(medhouseholdincome))+scale(education)
                                          + scale(date_since_social) + scale(date_since)
                                          +scale(pct_obesity)
                                          +scale(pct_age65)+scale(pct_diabetes)
                                          + (1|state)+ scale(beds/population) 
                                          + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(native.mode.nb.random.off.main)
MRR_pct_native<-exp(summary(native.mode.nb.random.off.main)[10]$coefficients[2,1])
MRR_pct_native
exp(summary(native.mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(native.mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(native.mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(native.mode.nb.random.off.main)[10]$coefficients[2,2])
summary(native.mode.nb.random.off.main)[10]$coefficients[2,4]

#HISPANIC- MRR- 1.01, 95% CI= (1.00,1.02), p-value is sig.=.0056; not sig with new additions
hispanic.mode.nb.random.off.main = glmer.nb(Deaths ~ scale(hispanic) + factor(q_popdensity)
                                            + scale(log(medhouseholdincome))+scale(education)
                                            + scale(date_since_social) + scale(date_since)
                                            +scale(pct_obesity)
                                            +scale(pct_age65)+scale(pct_diabetes)
                                            + (1|state)+ scale(beds/population) 
                                            + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(hispanic.mode.nb.random.off.main)
hispanicMRR<-exp(summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,1])
hispanicMRR
exp(summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,2])
summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2,4]


#########ALL RACES COMBINED####################
#NOW with obese
#hispanic-1.19,pct_blk-2.341,pct_asian-1.16,pct_white-1.62,pct_native-1.365, pct age 65 is sig.
combined.mode.nb.random.off.main = glmer.nb(Deaths ~ scale(hispanic) + scale(pct_blk) + scale(pct_asian) + scale(pct_white) + scale(pct_native)
                                            + factor(q_popdensity)
                                            + scale(log(medhouseholdincome))+scale(education)
                                            + scale(date_since_social) + scale(date_since)
                                            +scale(pct_obesity)
                                            +scale(pct_age65)+scale(pct_diabetes)
                                            + (1|state)+ scale(beds/population) 
                                            + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(combined.mode.nb.random.off.main)
CombinedMRR<-exp(summary(combined.mode.nb.random.off.main)[10]$coefficients[2:18,1])
CombinedMRR
combined.MRRmatrix<-exp(summary(combined.mode.nb.random.off.main)[10]$coefficients[2:18,1])
combined.MRRmatrix
summary(combined.mode.nb.random.off.main)[10]$coefficients[2:15,4]

#experiment 8-ICU
experimental8.mode.nb.random.off.main = glmer.nb(inIcuCumulative ~ scale(hispanic) + scale(pct_blk) + scale(pct_asian) + scale(pct_white) + scale(pct_native)
                                                 + factor(q_popdensity)
                                                 + scale(log(medhouseholdincome))+scale(education)
                                                 + scale(date_since_social) + scale(date_since)
                                                 +scale(pct_obesity)
                                                 +scale(pct_age65)+scale(pct_diabetes)
                                                 + (1|state)+ scale(beds/population) 
                                                 + offset(log(population)), data = aggregate_pm_census_cdc_test_beds_age_diabete_obesity)
summary(experimental8.mode.nb.random.off.main)
experimental8.MRRmatrix<-exp(summary(experimental8.mode.nb.random.off.main)[10]$coefficients[2:18,1])
experimental8.MRRmatrix


##DISPERSION TEST

Mean<-mean(aggregate_pm_census_cdc_test_beds$Deaths) # calculate mean

Variance<-var(aggregate_pm_census_cdc_test_beds$Deaths) # calculate variance

#Ratio=Dispersion- heavy overdispersion, neg binomial or quasipoisson more appropriate than poisson
Ratio<-(Variance/Mean)
Ratio

#Benjamini-Hochberg, probably need to generalize coeff. term
#Get p-values of each coefficient-replace first coefficient term to see other terms
blk.p.val.list<-summary(mode.nb.random.off.main)[10]$coefficients[2:10,4]
asian.p.val.list<-summary(asian.mode.nb.random.off.main)[10]$coefficients[2:10,4]
white.p.val.list<-summary(white.mode.nb.random.off.main)[10]$coefficients[2:10,4]
native.p.val.list<-summary(native.mode.nb.random.off.main)[10]$coefficients[2:10,4]
hispanic.p.val.list<-summary(hispanic.mode.nb.random.off.main)[10]$coefficients[2:10,4]
combined.p.val.list<-summary(combined.mode.nb.random.off.main)[10]$coefficients[2:14,4]

#BH Multiple Hyp test
#Blk- no change in number of significant terms, FDR=2e-04
blk.MH.test<-BH(p.val.list, alpha = 0.05)
summary(blk.MH.test)
plot(blk.MH.test)

#Asian- no change in number of significant terms, FDR=.0011
asian.MH.test<-BH(asian.p.val.list, alpha = 0.05)
summary(asian.MH.test)
plot(asian.MH.test)

#White- no change in number of significant terms, FDR=3e-04
white.MH.test<-BH(white.p.val.list, alpha = 0.05)
summary(white.MH.test)
plot(white.MH.test)

#Native- no change in number of significant terms, FDR=0
native.MH.test<-BH(native.p.val.list, alpha = 0.05)
summary(native.MH.test)
plot(native.MH.test)

#Hispanic- no change in number of significant terms, FDR=0
hispanic.MH.test<-BH(hispanic.p.val.list, alpha = 0.05)
summary(hispanic.MH.test)
plot(hispanic.MH.test)

#Combined- no change in number of significant terms, FDR=.0014
combined.MH.test<-BH(combined.p.val.list, alpha = 0.05)
summary(combined.MH.test)
plot(combined.MH.test)


#vuong-functional, need to interpret resultsmaybe not necessary?
v <- as.numeric(predict(mode.nb.random.off.main, type="response")>.05)

BiCopVuongClarke(
  v,
  aggregate_pm_census_cdc_test_beds$pct_blk,
  familyset = NA,
  correction = FALSE,
  level = 0.05,
  rotations = TRUE
)





###Comparative Graphs########-NEEDS UPDATE
x<-c("% Black", "%Asian","%White","%Native","%Hispanic")
x<-c(1:5)
y<-c(17.44,1840,.077,3.19,1.1)
y_below<-c(10.27,52.9,0.04,0.899,1.09)
y_above<-c(29.63,63989,0.122,11.28,1.11)
plot(x,y,xlab = "% Black   %Asian   %White   %Native   %Hispanic", ylab="MRR",pch=16,cex=2)
arrows(x0=x, y0=y_below, x1=x, y1=y_above, code=3, angle=90, length=0.1)

#graphs w/o %Asian
x<-c("% Black", "%White","%Native","%Hispanic")
x<-c(1:4)
y<-c(17.44,.077,3.19,1.1)
y_below<-c(10.27,0.04,0.899,1.09)
y_above<-c(29.63,0.122,11.28,1.11)
plot(x,y,xlab = "% Black     %White     %Native     %Hispanic", ylab="MRR",xaxt="none", ylim=c(1,30), pch=16,cex=2)
arrows(x0=x, y0=y_below, x1=x, y1=y_above, code=3, angle=90, length=0.1)
#Assumptions(only for pct_blk model for now) #############################################

#MULTICLASS CONFUSION MATRIX-still problematic
projections<-predict(mode.nb.random.off.main)

table(projections,aggregate_pm_census_cdc_test_beds$pct_blk)
prop.table(table(aggregate_pm_census_cdc_test_beds$Deaths,pred.fit.glmer$pct_blk))

conf_mat<-confusionMatrix(targets=aggregate_pm_census_cdc_test_beds$Deaths, 
                          predictions=pred.fit.glmer,data=aggregate_pm_census_cdc_test_beds)
confusionMatrix(pred.fit.glmer,aggregate_pm_census_cdc_test_beds$Deaths)
confusionMatrix(aggregate_pm_census_cdc_test_beds$Deaths, pred.fit.glmer$pct)

##secondary performance measure, currently non-funcitonal
pr <- prediction(pred.fit.glmer,aggregate_pm_census_cdc_test_beds$Deaths)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)

#Prediction- Need to understand better, seems like will 
#predict whether or not someone will die, rather than death count
p <- as.vector(predict(mode.nb.random.off.main, type="response")>.5)
confusion_matrix(aggregate_pm_census_cdc_test_beds$Deaths,p)
mean(p==aggregate_pm_census_cdc_test_beds$Deaths)
table1<-table(p,aggregate_pm_census_cdc_test_beds$Deaths)
plot (p)



#TABLED FOR NOW
#ROC/AUC Analysis of True positive vs False positive hit rate
blk.pred.fit.glmer <- predict(mode.nb.random.off.main, newdata = aggregate_pm_census_cdc_test_beds, type = "response")
asian.pred.fit.glmer<-predict(asian.mode.nb.random.off.main, newdata = aggregate_pm_census_cdc_test_beds, type = "response")
white.pred.fit.glmer<-predict(white.mode.nb.random.off.main, newdata = aggregate_pm_census_cdc_test_beds, type = "response")
native.pred.fit.glmer<-predict(native.mode.nb.random.off.main, newdata = aggregate_pm_census_cdc_test_beds, type = "response")
hispanic.pred.fit.glmer<-predict(hispanic.mode.nb.random.off.main, newdata = aggregate_pm_census_cdc_test_beds, type = "response")
#trying out multiclass.roc-93.4%, MULTICLASS ROC can't be graphed, no difference between 'predict' statements
multiroccurve<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, pred.fit.glmer,percent = TRUE))
multiroccurve2<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, projections,percent = TRUE))
#asian- 92.97%
asian.multiroccurve<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, asian.pred.fit.glmer,percent = TRUE))
#white- 93.3%
white.multiroccurve<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, white.pred.fit.glmer,percent = TRUE))
#native-93.43%
native.multiroccurve<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, native.pred.fit.glmer,percent = TRUE))
#hispanic-93.39%
hispanic.multiroccurve<-(multiclass.roc(aggregate_pm_census_cdc_test_beds$Deaths, hispanic.pred.fit.glmer,percent = TRUE))
##hosmer-lem. p-value over .05 means good fit, but we get neg chi square so the tst stat of Pr will always be above neg chi square
#hoslem.test(aggregate_pm_census_cdc_test_beds$Deaths, fitted(mode.nb.random.off.main), g=10)
#ANOVA for glmer packages, use for F-stat
#anova(mode.nb.random.off.main)

#roccurve<-(roc(aggregate_pm_census_cdc_test_beds$Deaths, pred.fit.glmer))
#auc(roc(aggregate_pm_census_cdc_test_beds$Deaths, pred.fit.glmer))
#AUC of .78, not bad but ideally over .8

#roccurve<-roccurve@y.values[[1]]
#Graph ROC curve
#plot(roccurve)
###Other checks (non functional) + models,
#trying to reveal correlation -> tried correlation graph matrix but crashed (due to large data size?)
'chart.Correlation(aggregate_pm_census_cdc_test_beds$pct_blk,aggregate_pm_census_cdc_test_beds$q_popdensity,aggregate_pm_census_cdc_test_beds$medhouseholdincome, 
                  aggregate_pm_census_cdc_test_beds$education, aggregate_pm_census_cdc_test_beds$date_since_social, aggregate_pm_census_cdc_test_beds$date_since,
                  aggregate_pm_census_cdc_test_beds$beds,aggregate_pm_census_cdc_test_beds$population, histogram=TRUE, pch=19)

cortest<-select_if(aggregate_pm_census_cdc_test_beds,is.numeric)
cor(cortest,method=c('pearson'))


cor(aggregate_pm_census_cdc_test_beds$pct_blk,aggregate_pm_census_cdc_test_beds$q_popdensity,aggregate_pm_census_cdc_test_beds$medhouseholdincome, 
    aggregate_pm_census_cdc_test_beds$education, aggregate_pm_census_cdc_test_beds$date_since_social, aggregate_pm_census_cdc_test_beds$date_since,
    aggregate_pm_census_cdc_test_beds$beds,aggregate_pm_census_cdc_test_beds$population,method=c('pearson'))

#without q_pop- note that this increases ratio of pct_blk but not necessarily better model
mode.nb.random.off.main = glmer.nb(Deaths ~ pct_blk 
                                   + scale(log(medhouseholdincome))+scale(education)
                                   + scale(date_since_social) + scale(date_since)
                                   + (1|state)+ scale(beds/population) 
                                   + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.main)
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
summary(mode.nb.random.off.main)[10]$coefficients[2,4]

#Both types of ANOVA are significant- p-values should be less than .05.
#ANOVA- linear regression
#Anova(mode.nb.random.off.main,test="LR")

#ANOVA from slides- f test
#Anova(mode.nb.random.off.main, test="F")
########################################################################################################

#Parition data 
Training_data_set<- createDataPartition(y=aggregate_pm_census_cdc_test_beds$Deaths,p=0.7, list=FALSE)
Prediction_data_set<- createDataPartition(y=aggregate_pm_census_cdc_test_beds$Deaths,p=0.3, list=FALSE)


#Partitioned analysis

mode.nb.random.off.main = glmer.nb(Deaths ~ pct_blk + factor(q_popdensity)
                                   + scale(log(medhouseholdincome))+scale(education)
                                   + scale(date_since_social) + scale(date_since)
                                   + (1|state)+ scale(beds/population) 
                                   + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.main)
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.main)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.main)[10]$coefficients[2,2])
summary(mode.nb.random.off.main)[10]$coefficients[2,4]

#PLOT PREDICTION LINE- Must partition data --> call it Prediction_data_set

Prediction_data_set<-seq(0,100,.5)

PredictCases <- predict(mode.nb.random.off.main, list(pct_blk = Prediction_data_set))

lines(Prediction_data_set,exp(PredictCases),lwd=2,col="blue")'


########################################################
# - beds
'mode.nb.random.off.beds = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                   + scale(poverty) + scale(log(medianhousevalue))
                                   + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                   + scale(education) + scale(pct_blk) + scale(hispanic)
                                   + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                   + scale(date_since_social) + scale(date_since)
                                   #+ scale(beds/population) 
                                   + scale(obese) + scale(smoke)
                                   + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                   + (1|state)
                                   + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.beds)
exp(summary(mode.nb.random.off.beds)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.beds)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.beds)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.beds)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.beds)[10]$coefficients[2,2])
summary(mode.nb.random.off.beds)[10]$coefficients[2,4]

# - smoking + bmi
mode.nb.random.off.brfss = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                    + scale(poverty)  + scale(log(medianhousevalue))
                                    + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                    + scale(education) + scale(pct_blk) + scale(hispanic)
                                    + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                    + scale(date_since_social) + scale(date_since)
                                    + scale(beds/population) 
                                    #+ scale(obese) + scale(smoke)
                                    + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                    + (1|state)
                                    + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.brfss)
exp(summary(mode.nb.random.off.brfss)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.brfss)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.brfss)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.brfss)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.brfss)[10]$coefficients[2,2])
summary(mode.nb.random.off.brfss)[10]$coefficients[2,4]


# - temp + humidity
mode.nb.random.off.weather = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                      + scale(poverty)  + scale(log(medianhousevalue))
                                      + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                      + scale(education) + scale(pct_blk) + scale(hispanic)
                                      + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                      + scale(date_since_social) + scale(date_since)
                                      + scale(beds/population) 
                                      + scale(obese) + scale(smoke)
                                      #+ scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                      + (1|state)
                                      + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.weather)
exp(summary(mode.nb.random.off.weather)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.weather)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.weather)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.weather)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.weather)[10]$coefficients[2,2])
summary(mode.nb.random.off.weather)[10]$coefficients[2,4]

# - outbreak
mode.nb.random.off.outbreak = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                       + scale(poverty)  + scale(log(medianhousevalue))
                                       + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                       + scale(education) + scale(pct_blk) + scale(hispanic)
                                       + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                       + scale(date_since_social) #+ scale(date_since)
                                       + scale(beds/population) 
                                       + scale(obese) + scale(smoke)
                                       + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                       + (1|state)
                                       + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.outbreak)
exp(summary(mode.nb.random.off.outbreak)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.outbreak)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.outbreak)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.outbreak)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.outbreak)[10]$coefficients[2,2])
summary(mode.nb.random.off.outbreak)[10]$coefficients[2,4]


# exclude NY Metro
mode.nb.random.off.nyc = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                  + scale(poverty)  + scale(log(medianhousevalue))
                                  + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                  + scale(education) + scale(pct_blk) + scale(hispanic)
                                  + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                  + scale(date_since_social) + scale(date_since)
                                  + scale(beds/population) 
                                  + scale(obese) + scale(smoke)
                                  + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                  + (1|state)
                                  + offset(log(population)),data = subset(aggregate_pm_census_cdc_test_beds,!(fips %in% c("09001","42089","36111","09009","36059","36103","34013",
                                                                                                                          "34019","34027","34037","34039","42103","34023","34025","34029",
                                                                                                                          "34035", "34003", "34017", "34031","36005","36047","36061",
                                                                                                                          "36079","36081",  "36085",  "36087",  "36119",  "36027", 
                                                                                                                          "36071",  "09005",  "34021"))))
summary(mode.nb.random.off.nyc)
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.nyc)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.nyc)[10]$coefficients[2,2])
summary(mode.nb.random.off.nyc)[10]$coefficients[2,4]

# exclude <10 confirmed
mode.nb.random.off.large = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                    + scale(poverty)  + scale(log(medianhousevalue))
                                    + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                    + scale(education) + scale(pct_blk) + scale(hispanic)
                                    + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                    + scale(date_since_social) + scale(date_since)
                                    + scale(beds/population) 
                                    + scale(obese) + scale(smoke)
                                    + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                    + (1|state)
                                    + offset(log(population)), data = subset(aggregate_pm_census_cdc_test_beds,Confirmed >=10)) 
summary(mode.nb.random.off.large)
exp(summary(mode.nb.random.off.large)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.large)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.large)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.large)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.large)[10]$coefficients[2,2])
summary(mode.nb.random.off.large)[10]$coefficients[2,4]

# rural
mode.nb.random.off.rural = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                    + scale(poverty)  + scale(log(medianhousevalue))
                                    + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                    + scale(education) + scale(pct_blk) + scale(hispanic)
                                    + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                    + scale(date_since_social) + scale(date_since)
                                    + scale(beds/population) 
                                    + scale(obese) + scale(smoke)
                                    + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                    + (1|state)
                                    + offset(log(population)), data = subset(aggregate_pm_census_cdc_test_beds,X2013.code>4)) 
summary(mode.nb.random.off.rural)
exp(summary(mode.nb.random.off.rural)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.rural)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.rural)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.rural)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.rural)[10]$coefficients[2,2])
summary(mode.nb.random.off.rural)[10]$coefficients[2,4]

#urban
mode.nb.random.off.urban = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                    + scale(poverty)  + scale(log(medianhousevalue))
                                    + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                    + scale(education) + scale(pct_blk) + scale(hispanic)
                                    + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                    + scale(date_since_social) + scale(date_since)
                                    + scale(beds/population) 
                                    + scale(obese) + scale(smoke)
                                    + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                    + (1|state)
                                    + offset(log(population)), data = subset(aggregate_pm_census_cdc_test_beds,X2013.code<=4)) 
summary(mode.nb.random.off.urban)
exp(summary(mode.nb.random.off.urban)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.urban)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.urban)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.urban)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.urban)[10]$coefficients[2,2])
summary(mode.nb.random.off.urban)[10]$coefficients[2,4]



# main analysis with category PM
aggregate_pm_census_cdc_test_beds$q_pm = 1
quantile_pm = quantile(aggregate_pm_census_cdc_test_beds$mean_pm25,c(0.2,0.4,0.6,0.8))
aggregate_pm_census_cdc_test_beds$q_pm[aggregate_pm_census_cdc_test_beds$mean_pm25<=quantile_pm[1]] = 1
aggregate_pm_census_cdc_test_beds$q_pm[aggregate_pm_census_cdc_test_beds$mean_pm25>quantile_pm[1] &
                                         aggregate_pm_census_cdc_test_beds$mean_pm25<=quantile_pm[2]] = 2
aggregate_pm_census_cdc_test_beds$q_pm[aggregate_pm_census_cdc_test_beds$mean_pm25>quantile_pm[2] &
                                         aggregate_pm_census_cdc_test_beds$mean_pm25<=quantile_pm[3]] = 3
aggregate_pm_census_cdc_test_beds$q_pm[aggregate_pm_census_cdc_test_beds$mean_pm25>quantile_pm[3] &
                                         aggregate_pm_census_cdc_test_beds$mean_pm25<=quantile_pm[4]] = 4
aggregate_pm_census_cdc_test_beds$q_pm[aggregate_pm_census_cdc_test_beds$mean_pm25>quantile_pm[4]] = 5

mode.nb.random.off.catepm = glmer.nb(Deaths ~ factor(q_pm) + factor(q_popdensity)
                                     + scale(poverty)  + scale(log(medianhousevalue))
                                     + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                     + scale(education) + scale(pct_blk) + scale(hispanic)
                                     + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                     + scale(date_since_social) + "scale(date_since)"
                                     + "scale(beds/population)"
                                     + scale(obese) + scale(smoke)
                                     + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                     + (1|state)
                                     + offset(log(population)), data = (aggregate_pm_census_cdc_test_beds)) 
summary(mode.nb.random.off.urban)
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[2,2])
summary(mode.nb.random.off.catepm)[10]$coefficients[2,4]

exp(summary(mode.nb.random.off.catepm)[10]$coefficients[3,1])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[3,1] - 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[3,2])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[3,1] + 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[3,2])
summary(mode.nb.random.off.catepm)[10]$coefficients[3,4]

exp(summary(mode.nb.random.off.catepm)[10]$coefficients[4,1])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[4,1] - 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[4,2])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[4,1] + 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[4,2])
summary(mode.nb.random.off.catepm)[10]$coefficients[4,4]

exp(summary(mode.nb.random.off.catepm)[10]$coefficients[5,1])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[5,1] - 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[5,2])
exp(summary(mode.nb.random.off.catepm)[10]$coefficients[5,1] + 1.96*summary(mode.nb.random.off.catepm)[10]$coefficients[5,2])
summary(mode.nb.random.off.catepm)[10]$coefficients[5,4]

# tested
mode.nb.random.off.tested = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                     + scale(poverty)  + scale(log(medianhousevalue))
                                     + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                     + scale(education) + scale(pct_blk) + scale(hispanic)
                                     + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                     + scale(date_since_social) + scale(date_since)
                                     + scale(beds/population) 
                                     + scale(obese) + scale(smoke)
                                     + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                     + (1|state)
                                     + scale(totalTestResults)  
                                     + offset(log(population)), data = (aggregate_pm_census_cdc_test_beds)) 
summary(mode.nb.random.off.tested)
exp(summary(mode.nb.random.off.tested)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.tested)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.tested)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.tested)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.tested)[10]$coefficients[2,2])
summary(mode.nb.random.off.tested)[10]$coefficients[2,4]

# cli
mode.nb.random.off.symptom = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                      + scale(poverty)  + scale(log(medianhousevalue))
                                      + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                      + scale(education) + scale(pct_blk) + scale(hispanic)
                                      + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                      + scale(date_since_social) + scale(date_since)
                                      + scale(beds/population) 
                                      + scale(obese) + scale(smoke)
                                      + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                      + scale(cli)  
                                      + (1|Province_State)
                                      + offset(log(population)), data = (aggregate_pm_census_cdc_test_beds)) 
summary(mode.nb.random.off.symptom)
exp(summary(mode.nb.random.off.symptom)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.symptom)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.symptom)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.symptom)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.symptom)[10]$coefficients[2,2])
summary(mode.nb.random.off.symptom)[10]$coefficients[2,4]


# log(popdensity)
mode.nb.random.off.main.logpopdensity = glmer.nb(Deaths ~ mean_pm25 + scale(log(popdensity))
                                                 + scale(poverty)  + scale(log(medianhousevalue))
                                                 + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                                 + scale(education) + scale(pct_blk) + scale(hispanic)
                                                 + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                                 + scale(date_since_social) + scale(date_since)
                                                 + scale(beds/population) 
                                                 + scale(obese) + scale(smoke)
                                                 + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                                 + (1|state)
                                                 + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(mode.nb.random.off.main.logpopdensity)
exp(summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,1])
exp(summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,2])
exp(summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,2])
summary(mode.nb.random.off.main.logpopdensity)[10]$coefficients[2,4]


# log
mode.nb.random.log = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                              + scale(poverty)  + scale(log(medianhousevalue))
                              + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                              + scale(education) + scale(pct_blk) + scale(hispanic)
                              + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                              + scale(date_since_social) + scale(date_since)
                              + scale(beds/population) 
                              + scale(obese) + scale(smoke)
                              + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                              + (1|state)
                              + scale(log(population)), data = (aggregate_pm_census_cdc_test_beds)) 
summary(mode.nb.random.log)
exp(summary(mode.nb.random.log)[10]$coefficients[2,1])
exp(summary(mode.nb.random.log)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.log)[10]$coefficients[2,2])
exp(summary(mode.nb.random.log)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.log)[10]$coefficients[2,2])
summary(mode.nb.random.log)[10]$coefficients[2,4]

mode.nb.random.nonlog = glmer.nb(Deaths ~ mean_pm25 + factor(q_popdensity)
                                 + scale(poverty)  + scale(log(medianhousevalue))
                                 + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                                 + scale(education) + scale(pct_blk) + scale(hispanic)
                                 + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                                 + scale(date_since_social) + scale(date_since)
                                 + scale(beds/population) 
                                 + scale(obese) + scale(smoke)
                                 + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                                 + (1|state)
                                 + scale((population)), data = (aggregate_pm_census_cdc_test_beds)) 
summary(mode.nb.random.nonlog)
exp(summary(mode.nb.random.nonlog)[10]$coefficients[2,1])
exp(summary(mode.nb.random.nonlog)[10]$coefficients[2,1] - 1.96*summary(mode.nb.random.nonlog)[10]$coefficients[2,2])
exp(summary(mode.nb.random.nonlog)[10]$coefficients[2,1] + 1.96*summary(mode.nb.random.nonlog)[10]$coefficients[2,2])
summary(mode.nb.random.nonlog)[10]$coefficients[2,4]

# zero inflated
glmmTMB.off.main = glmmTMB(Deaths ~ mean_pm25 + factor(q_popdensity)
                           + scale(poverty)  + scale(log(medianhousevalue))
                           + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                           + scale(education) + scale(pct_blk) + scale(hispanic)
                           + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                           + scale(date_since_social) + scale(date_since)
                           + scale(beds/population) 
                           + scale(obese) + scale(smoke)
                           + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                           + offset(log(population)) + (1 | state), data = aggregate_pm_census_cdc_test_beds, 
                           family = nbinom2, ziformula  = ~ 1
)
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1])
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1] - 1.96*summary(glmmTMB.off.main)[6]$coefficients$cond[2,2])
exp(summary(glmmTMB.off.main)[6]$coefficients$cond[2,1] + 1.96*summary(glmmTMB.off.main)[6]$coefficients$cond[2,2])
summary(glmmTMB.off.main)[6]$coefficients$cond[2,4]

# fixed NB
glm.nb.off = glm.nb(Deaths ~  mean_pm25 + factor(q_popdensity)
                    + scale(poverty)  + scale(log(medianhousevalue))
                    + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                    + scale(education) + scale(pct_blk) + scale(hispanic) 
                    + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                    + scale(date_since_social) + scale(date_since)
                    + scale(beds/population) 
                    + scale(obese) + scale(smoke)
                    + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                    + factor(state)
                    + offset(log(population)), data = aggregate_pm_census_cdc_test_beds)
summary(glm.nb.off)


# spatial-correlation gamm
gamm.off.main = gamm4(Deaths ~ mean_pm25 + factor(q_popdensity)
                      + scale(poverty)  + scale(log(medianhousevalue))
                      + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                      + scale(education) + scale(pct_blk) + scale(hispanic) 
                      + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                      + scale(date_since_social) + scale(date_since)
                      + scale(beds/population) 
                      + scale(obese) + scale(smoke)
                      + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                      + offset(log(population)) + s(Lat) + s(Long_), data = aggregate_pm_census_cdc_test_beds, 
                      family=negbin(1), random = ~(1|state))
exp(summary(gamm.off.main.bi))


# non-linear pm
gamm.off.main.spm25 = gamm4(Deaths ~ s(mean_pm25) + factor(q_popdensity)
                            + scale(poverty)  + scale(log(medianhousevalue))
                            + scale(log(medhouseholdincome)) + scale(pct_owner_occ) 
                            + scale(education) + scale(pct_blk) + scale(hispanic) 
                            + scale(older_pecent) + scale(prime_pecent) + scale(mid_pecent) 
                            + scale(date_since_social) + scale(date_since)
                            + scale(beds/population) 
                            + scale(obese) + scale(smoke)
                            + scale(mean_summer_temp) + scale(mean_winter_temp) + scale(mean_summer_rm) + scale(mean_winter_rm)
                            + offset(log(population)) + s(Lat) + s(Long_), data = aggregate_pm_census_cdc_test_beds, 
                            family=negbin(1), random = ~(1|state))


